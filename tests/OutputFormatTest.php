<?php

use PHPUnit\Framework\TestCase;

class OutputFormatTest extends TestCase
{
    private $formatOutput;

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->formatOutput = new FormatOutput();
    }

    public function test_case1()
    {
        $format = $this->formatOutput->get_format();
        echo "<pre>format = " . print_r($format, true) . "</pre>\n";
    }

    public function test_case2()
    {
        $data = [
            "a" => 1,
            "b" => "2222",
            "c" => "3333",
            "d" => [
                "2222",
                "2112",
                "2332",
            ],
        ];

        $response = $this->formatOutput->format($data);

        var_dump($response);
    }
}

class FormatOutput
{
    private $json = '{
        "a" : "boolean",        
        "b" : "integer",        
        "c" : "string",
        "d" : ["integer"]    
    }';
    private $format = "";

    public function __construct()
    {
        $this->format = json_decode($this->json);
    }

    public function get_format()
    {
        return $this->format;
    }

    public function format($value, $format = null)
    {
        $format = $format ?? $this->format;

        if (is_object($format)) {
            if (is_array($value)) {
                $value = (object) $value;
            }

            foreach ($format as $key => $sub_format) {
                if (property_exists($value, $key)) {
                    $value->$key = $this->format($value->$key, $sub_format);
                } else {
                    $value->$key = null;
                }
            }
            return $value;
        } else if (is_array($format)) {
            if (! is_array($value)) {
                return null;
            }

            $sub_format = $format[0];
            foreach ($value as $i => $val) {
                $value[$i] = $this->format($value[$i], $sub_format);
            }
            return $value;
        } else {
            switch ($format) {
                case "integer":
                    echo "integer\n";
                    return intval($value);
                    break;

                case "float":
                    echo "float\n";
                    return floatval($value);
                    break;

                case "string":
                    echo "string\n";
                    return strval($value);
                    break;

                case "boolean":
                    echo "bool\n";
                    return boolval($value);
                    break;
                default:
                    return $value;
                    break;
            }
        }
    }
}
